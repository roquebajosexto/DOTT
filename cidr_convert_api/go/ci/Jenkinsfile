pipeline {
  agent any
  tools {
      go 'go1.16.4'
  }
  environment {
    GO114MODULE = 'on'
    CGO_ENABLED = 0
    GOPATH = "${JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_ID}"
  }
  stages {
    // stage('Pre Test') {
    //   steps {
    //       echo 'Installing dependenciess'
    //       sh 'go version'
    //       sh '''
    //       cd ./cidr_convert_api/go/
    //       go get -u golang.org/x/lint/golint
    //       '''
    //       sh '''
    //         go get github.com/Pepegasca/goop
    //       '''
    //   }
    // }
    // stage('Test') {
    //   steps {
    //       echo 'Running vetting'
    //       sh '''
    //       cd ./cidr_convert_api/go/
    //       go vet .'''
    //       echo 'Running Unit testing'
    //       sh '''
    //       cd ./cidr_convert_api/go/
    //       go test
    //       '''
    //   }
    // }
    stage('SonarQube analysis') {
      steps {
        script {
            scannerHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
            withSonarQubeEnv('sonarcloud') {
                sh '/var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonar/bin/sonar-scanner --version'
            }
        }
      }
    }
  // stage('deploy') {
  //   steps {
  //     sh '''
  //     cd ./cidr_convert_api/go/
  //     sudo docker-compose up -d --build
  //     '''
  //   }
  // }
  }
}
